# Copyright (C) 2019-2020 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
FROM ubuntu:18.04 AS base

# hadolint ignore=DL3002
USER root
WORKDIR /

SHELL ["/bin/bash", "-xo", "pipefail", "-c"]

# hadolint ignore=DL3008
RUN apt-get update && \
    apt-get install -y --no-install-recommends curl ca-certificates && \
    rm -rf /var/lib/apt/lists/* && ln -snf /usr/share/zoneinfo/$(curl https://ipapi.co/timezone -k) /etc/localtime

# download source for pypi-kenlm LGPL package
WORKDIR /tmp
RUN curl -L https://files.pythonhosted.org/packages/7f/e6/1639d2de28c27632e3136015ecfd67774cca6f55146507baeaef06b113ba/pypi-kenlm-0.1.20190403.tar.gz --output pypi-kenlm.tar.gz

{% for pre_command in pre_commands %}
{{ pre_command|safe }}
{% endfor %}
# -----------------
FROM ubuntu:18.04 AS ov_base

LABEL Description="This is the {{ distribution }} image for {{ product_name }} on Ubuntu 18.04 LTS"
LABEL Vendor="Intel Corporation"

USER root
WORKDIR /

SHELL ["/bin/bash", "-xo", "pipefail", "-c"]

# Creating user openvino and adding it to groups "video" and "users" to use GPU and VPU
RUN useradd -ms /bin/bash -G video,users openvino && \
    chown openvino -R /home/openvino

RUN mkdir /opt/intel

ENV INTEL_OPENVINO_DIR /opt/intel/openvino

COPY --from=base /opt/intel /opt/intel

WORKDIR /thirdparty
{% if 'runtime' in distribution %}
ARG DEPS=dpkg-dev
ARG LGPL_DEPS="libgtk-3-0 \
               libgstreamer1.0-0 \
               gstreamer1.0-plugins-base \
               gstreamer1.0-plugins-good \
               gstreamer1.0-plugins-bad \
               gstreamer1.0-vaapi \
               ffmpeg \
               libgl-dev \
               libtag-extras1 \
               libfaac0 \
               python3-gi \
               libfluidsynth1 \
               libnettle6 \
               gstreamer1.0-plugins-ugly \
               gstreamer1.0-alsa \
               libglib2.0"
RUN apt-get update && \
    apt-get install -y git && \
    rm -rf /var/lib/apt/lists/* && \
    git clone https://git.launchpad.net/~ubuntu-desktop/ubuntu/+source/gtk+3.0 -b ubuntu/bionic && \
    git clone https://git.launchpad.net/~ubuntu-core-dev/ubuntu/+source/glibc && \
    git clone https://salsa.debian.org/gstreamer-team/gstreamer1.0.git && \
    git clone https://github.com/GStreamer/gst-plugins-base.git -b 1.0 && \
    git clone https://github.com/GStreamer/gst-plugins-good.git -b 1.0 && \
    git clone https://github.com/GStreamer/gst-plugins-bad.git -b 1.0 && \
    git clone https://salsa.debian.org/gstreamer-team/gstreamer-vaapi.git && \
    git clone https://salsa.debian.org/multimedia-team/ffmpeg.git
{% elif 'dev' == distribution %}
ARG DEPS=dpkg-dev
ARG LGPL_DEPS="g++ \
               gcc \
               libc6-dev \
               libgtk-3-0"
RUN apt-get update && \
    apt-get install -y git && \
    rm -rf /var/lib/apt/lists/* && \
    git clone https://git.launchpad.net/~ubuntu-desktop/ubuntu/+source/gtk+3.0 -b ubuntu/bionic && \
    git clone https://git.launchpad.net/~ubuntu-core-dev/ubuntu/+source/glibc
{% else %}
ARG DEPS="dpkg-dev \
          libopenexr22 \
          flex"
ARG LGPL_DEPS="g++ \
               gcc \
               libc6-dev \
               libgtk-3-0 \
               libgstreamer1.0-0 \
               gstreamer1.0-plugins-base \
               gstreamer1.0-plugins-good \
               gstreamer1.0-plugins-bad \
               gstreamer1.0-vaapi \
               ffmpeg \
               libgl-dev \
               libtag-extras1 \
               libfaac0 \
               python3-gi \
               libfluidsynth1 \
               libnettle6 \
               gstreamer1.0-plugins-ugly \
               gstreamer1.0-alsa \
               libglib2.0"
RUN apt-get update && \
    apt-get install -y git && \
    rm -rf /var/lib/apt/lists/* && \
    git clone https://git.launchpad.net/~ubuntu-desktop/ubuntu/+source/gtk+3.0 -b ubuntu/bionic && \
    git clone https://git.launchpad.net/~ubuntu-core-dev/ubuntu/+source/glibc && \
    git clone https://salsa.debian.org/gstreamer-team/gstreamer1.0.git && \
    git clone https://github.com/GStreamer/gst-plugins-base.git -b 1.0 && \
    git clone https://github.com/GStreamer/gst-plugins-good.git -b 1.0 && \
    git clone https://github.com/GStreamer/gst-plugins-bad.git -b 1.0 && \
    git clone https://salsa.debian.org/gstreamer-team/gstreamer-vaapi.git && \
    git clone https://salsa.debian.org/multimedia-team/ffmpeg.git
{% endif %}

# hadolint ignore=DL3008
RUN sed -Ei 's/# deb-src /deb-src /' /etc/apt/sources.list && \
    apt-get update && \
    apt-get install -y curl && ln -snf /usr/share/zoneinfo/$(curl https://ipapi.co/timezone -k) /etc/localtime && \
    apt-get install -y --no-install-recommends ${DEPS} ${LGPL_DEPS} && \
    apt-get source --download-only ${LGPL_DEPS} || true && \
    rm -rf /var/lib/apt/lists/*

{% for command in commands %}
{{ command|safe }}
{% endfor %}

# Post-installation cleanup and setting up OpenVINO environment variables
RUN if [ -f "${INTEL_OPENVINO_DIR}"/bin/setupvars.sh ]; then \
        printf "\nexport TBB_DIR=\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\n" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh; \
        printf "\nsource \${INTEL_OPENVINO_DIR}/bin/setupvars.sh\n" >> /home/openvino/.bashrc; \
        printf "\nsource \${INTEL_OPENVINO_DIR}/bin/setupvars.sh\n" >> /root/.bashrc; \
    fi; \
    if [ -d "${INTEL_OPENVINO_DIR}"/opt/intel/mediasdk ]; then \
        printf "\nexport LIBVA_DRIVER_NAME=iHD \nexport LIBVA_DRIVERS_PATH=\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \nexport GST_VAAPI_ALL_DRIVERS=1 \nexport LIBRARY_PATH=\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\$LIBRARY_PATH \nexport LD_LIBRARY_PATH=\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\$LD_LIBRARY_PATH \n" >> /home/openvino/.bashrc; \
        printf "\nexport LIBVA_DRIVER_NAME=iHD \nexport LIBVA_DRIVERS_PATH=\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/ \nexport GST_VAAPI_ALL_DRIVERS=1 \nexport LIBRARY_PATH=\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\$LIBRARY_PATH \nexport LD_LIBRARY_PATH=\${INTEL_OPENVINO_DIR}/opt/intel/mediasdk/lib64/:\$LD_LIBRARY_PATH \n" >> /root/.bashrc; \
    fi;

RUN apt-get update && \
    apt-get autoremove -y dpkg-dev git && \
    apt-get install -y --no-install-recommends ${LGPL_DEPS} && \
    rm -rf /var/lib/apt/lists/*

USER openvino
WORKDIR ${INTEL_OPENVINO_DIR}

CMD ["/bin/bash"]

# Setup custom layers below
{% for layer in layers %}
{{ layer|safe }}
{% endfor %}