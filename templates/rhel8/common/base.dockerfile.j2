# Copyright (C) 2019-2021 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
FROM registry.access.redhat.com/ubi8:8.2 AS base

# hadolint ignore=DL3002
USER root
WORKDIR /

SHELL ["/bin/bash", "-xo", "pipefail", "-c"]

ARG SUBSCRIPTION_USER=
ARG SUBSCRIPTION_PASSWD=

RUN subscription-manager register --username $SUBSCRIPTION_USER  --password $SUBSCRIPTION_PASSWD --auto-attach && \
    subscription-manager release --set=`cat /etc/*release | grep VERSION_ID | cut -f2 -d'"'`

{% for pre_command in pre_commands %}
{{ pre_command|safe }}
{% endfor %}

RUN subscription-manager unregister
# -----------------
FROM registry.access.redhat.com/ubi8/ubi:8.2 AS ov_base

LABEL name="rhel8_runtime" \
      maintainer="openvino_docker@intel.com" \
      vendor="Intel Corporation" \
      version="2021.3" \
      release="2021.3" \
      summary="Provides the latest release of Intel(R) Distribution of OpenVINO(TM) toolkit." \
      description="This is the runtime image for Intel(R) Distribution of OpenVINO(TM) toolkit on RHEL UBI 8"

USER root
WORKDIR /

SHELL ["/bin/bash", "-xo", "pipefail", "-c"]

RUN subscription-manager register --username $SUBSCRIPTION_USER  --password $SUBSCRIPTION_PASSWD --auto-attach && \
    subscription-manager release --set=`cat /etc/*release | grep VERSION_ID | cut -f2 -d'"'`

# Creating user openvino and adding it to groups "video" and "users" to use GPU and VPU
RUN useradd -ms /bin/bash -G video,users openvino && \
    chown openvino -R /home/openvino

RUN mkdir /opt/intel

ENV INTEL_OPENVINO_DIR /opt/intel/openvino

COPY --from=base /opt/intel /opt/intel

ARG LGPL_DEPS="gcc-c++ \
               gtk3"

ARG INSTALL_SOURCES="no"

WORKDIR /thirdparty
# hadolint ignore=DL3031, DL3033
RUN yum -y update && rpm -qa --qf "%{name}\n" > base_packages.txt && \
	yum install -y ${LGPL_DEPS} && \
	if [ "$INSTALL_SOURCES" = "yes" ]; then \
		rpm -qa --qf "%{name}\n" > all_packages.txt && \
		grep -v -f base_packages.txt all_packages.txt | while read line; do \
		package=`echo $line`; \
		rpm -qa $package --qf "%{name}: %{license}\n" | grep GPL; \
		exit_status=$?; \
		if [ $exit_status -eq 0 ]; then \
		    yumdownloader --source -y $package;  \
		fi \
	  done && \
      echo "Download source for `ls | wc -l` third-party packages: `du -sh`"; fi && \
	yum clean all && rm -rf /var/cache/yum

WORKDIR ${INTEL_OPENVINO_DIR}/licensing
RUN if [ "$INSTALL_SOURCES" = "no" ]; then \
        echo "This image doesn't contain source for 3d party components under LGPL/GPL licenses. Please use tag <YYYY.U_src> to pull the image with downloaded sources." > DockerImage_readme.txt ; \
    fi

WORKDIR /licenses
RUN cp -rf "${INTEL_OPENVINO_DIR}"/licensing /licenses

{% for command in commands %}
{{ command|safe }}
{% endfor %}

# Post-installation cleanup and setting up OpenVINO environment variables
RUN rm -rf /tmp && mkdir /tmp && subscription-manager unregister
RUN if [ -f "${INTEL_OPENVINO_DIR}"/bin/setupvars.sh ]; then \
        printf "\nexport TBB_DIR=\${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/cmake\n" >> ${INTEL_OPENVINO_DIR}/bin/setupvars.sh; \
        printf "\nsource \${INTEL_OPENVINO_DIR}/bin/setupvars.sh\n" >> /home/openvino/.bashrc; \
        printf "\nsource \${INTEL_OPENVINO_DIR}/bin/setupvars.sh\n" >> /root/.bashrc; \
    fi;

USER openvino
WORKDIR ${INTEL_OPENVINO_DIR}

CMD ["/bin/bash"]

# Setup custom layers below
{% for layer in layers %}
{{ layer|safe }}
{% endfor %}