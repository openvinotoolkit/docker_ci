name: Update dockerfiles

on:
  workflow_dispatch:
    inputs:
      product_version:
        description: 'OpenVINO version (example: 2021.4)'
        required: true
        default: ''

jobs:
  update_dockerfiles:
    runs-on: ubuntu-18.04
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Setting up Python dependencies
        run: python -m pip install -r requirements.txt
      - name: Generate dockerfiles for release
        shell: bash
        run: |
          declare -A IMAGES=( ['ubuntu18']='runtime dev'
                              ['ubuntu20']='runtime dev'
                              ['rhel8']='runtime dev'
                              ['winserver2019']='runtime dev'
                              ['windows20h2']='runtime dev' )
          for image_os in "${!IMAGES[@]}"
          do
            for distr in ${IMAGES[$image_os]}
            do
              if [[ "$image_os" == win* ]]
              then
                if [[ "$distr" != "runtime" ]]
                then
                  python docker_openvino.py gen_dockerfile -os "$image_os" -dist "$distr" -p ${{ github.event.inputs.product_version }} --pre_stage_msbuild=msbuild2019_online --msbuild msbuild2019_online
                else
                  python docker_openvino.py gen_dockerfile -os "$image_os" -dist "$distr" -p ${{ github.event.inputs.product_version }} --pre_stage_msbuild=msbuild2019_online
                fi
              else
                python docker_openvino.py gen_dockerfile -os "$image_os" -dist "$distr" -p ${{ github.event.inputs.product_version }}
              fi
              if [ "$image_os" == "rhel8" ]
              then
                python docker_openvino.py gen_dockerfile -os "$image_os" -dist "$distr" -p ${{ github.event.inputs.product_version }} --rhel_platform=openshift
              fi
            done
          done
      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@f22a7da129c901513876a2380e2dae9f8e145330
        with:
          token: ${{ secrets.CREATE_PR_USER_TOKEN }}
          commit-message: Update dockerfiles for ${{ github.event.inputs.product_version }} release
          title: Update dockerfiles for ${{ github.event.inputs.product_version }} release
          body: Automated dockerfiles update
          branch: update-dockerfiles-${{ github.event.inputs.product_version }}
          delete-branch: true
      - name: Show Pull Request info
        run: |
          echo "Pull Request Number - ${{ steps.create_pr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.create_pr.outputs.pull-request-url }}"
          echo "Pull Request Operation - ${{ steps.create_pr.outputs.pull-request-operation }}"
      - name: Collecting artifacts
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: |
            logs/
            dockerfiles/
            ./*.html
            ./*.log
