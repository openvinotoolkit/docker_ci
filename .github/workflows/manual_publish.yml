name: Image publishing

on:
  workflow_dispatch:
    inputs:
      package_url:
        description: 'URL to OpenVINO package'
        required: true
        default: ''
      distribution:
        description: 'Distribution of OpenVINO package: dev, data_runtime, runtime, data_dev'
        required: true
        default: 'dev'
      os:
        description: 'OS for Docker image: ubuntu18, ubuntu20, centos7, centos8, winserver2019'
        required: true
        default: ''
      host_os:
        description: 'OS for Host machine: ubuntu-18.04, windows-2019'
        required: true
        default: ''
      tags:
        description: 'Tags, ex. -t image_name:YYYY.U -t image_name:YYYY.U_src -t image_name:latest'
        required: true
        default: ''
      args:
        description: 'Additional arguments, ex. --build_arg no_samples=True --build_arg INSTALL_SOURCES=yes'
        required: false
        default: ''

jobs:
  manual_publish:
    strategy:
      matrix:
        os: [ ubuntu-18.04, windows-2019 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Setting up Python dependencies
        if: ${{ matrix.os == github.event.inputs.host_os }}
        run: python -m pip install -r requirements.txt
      - name: Docker login to registry (Linux)
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        run: echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker login to registry (Windows)
        if: ${{ matrix.os == 'windows-2019' }}
        run: echo $Env:DOCKER_PASSWORD | docker login --username $Env:DOCKER_USERNAME --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and publish image on DockerHub
        if: ${{ matrix.os == github.event.inputs.host_os }}
        run: python docker_openvino.py all --dist ${{ github.event.inputs.distribution }} -os ${{ github.event.inputs.os }} --package_url ${{ github.event.inputs.package_url }} --nightly -r openvino ${{ github.event.inputs.tags }} ${{ github.event.inputs.args }}
      - name: Docker logout
        run: docker logout
      - name: Docker login to Azure registry (Linux)
        if: ${{ matrix.os == 'ubuntu-18.04' && contains(github.event.inputs.os, 'ubuntu') }}
        run: echo $AZURE_PASSWORD | docker login --username $AZURE_USERNAME --password-stdin openvino.azurecr.io
        env:
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
      - name: Docker login to Azure registry (Windows)
        if: ${{ matrix.os == 'windows-2019' && contains(github.event.inputs.os, 'win') }}
        run: echo $Env:AZURE_PASSWORD | docker login --username $Env:AZURE_USERNAME --password-stdin openvino.azurecr.io
        env:
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
      - name: Publish image on Azure
        if: ${{ matrix.os == github.event.inputs.host_os && ! contains(github.event.inputs.os, 'centos') }}
        run: python docker_openvino.py deploy -r openvino.azurecr.io ${{ github.event.inputs.tags }}
      - name: Docker logout Azure
        run: docker logout openvino.azurecr.io
      - name: Collecting artifacts
        if: ${{ matrix.os == github.event.inputs.host_os }}
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: |
            logs/
            ./*.html
            ./*.log
